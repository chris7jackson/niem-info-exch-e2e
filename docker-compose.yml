x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "5"

services:
  minio:
    image: quay.io/minio/minio:latest
    command: ["server", "/data", "--address", ":9000", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports:
      - "9001:9000"
      - "9002:9001"
    volumes:
      - minio-data:/data
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 30
    logging: *default-logging

  neo4j:
    image: neo4j:5.20-community
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD:-password}
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p ${NEO4J_PASSWORD:-password} 'RETURN 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    logging: *default-logging

  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
      args:
        VERSION: ${VERSION:-0.1.0}
        GIT_COMMIT: ${GIT_COMMIT:-dev}
        BUILD_DATE: ${BUILD_DATE:-unknown}
    environment:
      DEV_TOKEN: ${DEV_TOKEN:-devtoken}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-http://minio:9000}
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minio}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minio123}
      MINIO_SECURE: "false"
      NEO4J_URI: ${NEO4J_URI:-bolt://neo4j:7687}
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD:-password}
      API_HOST: ${API_HOST:-0.0.0.0}
      API_PORT: ${API_PORT:-8000}
    volumes:
      - api-data:/data
    ports:
      - "${API_PORT:-8000}:8000"
    networks:
      - default
    depends_on:
      minio:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/readyz"]
      interval: 5s
      timeout: 3s
      retries: 30
    logging: *default-logging

  ui:
    build:
      context: .
      dockerfile: ./ui/Dockerfile
      args:
        VERSION: ${VERSION:-0.1.0}
        GIT_COMMIT: ${GIT_COMMIT:-dev}
        BUILD_DATE: ${BUILD_DATE:-unknown}
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:${API_PORT:-8000}}
    ports:
      - "${UI_PORT:-3000}:3000"
    networks:
      - default
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    logging: *default-logging

networks:
  default:
    name: ${COMPOSE_PROJECT_NAME:-niem}-network
    driver: bridge

volumes:
  minio-data:
  neo4j-data:
  api-data: