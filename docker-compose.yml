x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "5"

services:
  minio:
    image: quay.io/minio/minio:latest
    command: ["server", "/data", "--address", ":9000", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports: ["9001:9000", "9002:9001"]
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 30
    logging: *default-logging

  neo4j:
    image: neo4j:5.20-community
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD:-password}
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_PLUGINS: '["apoc"]'
    ports: ["7474:7474", "7687:7687"]
    volumes:
      - neo4j-data:/data
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p ${NEO4J_PASSWORD:-password} 'RETURN 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    logging: *default-logging

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      DEV_TOKEN: ${DEV_TOKEN:-devtoken}
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-minio}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minio123}
      MINIO_SECURE: "false"
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: ${NEO4J_PASSWORD:-password}
      SQLITE_PATH: /data/meta.sqlite
    volumes:
      - api-data:/data
      - ./third_party:/app/third_party:ro
    ports: ["8000:8000"]
    depends_on:
      minio:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/readyz"]
      interval: 5s
      timeout: 3s
      retries: 30
    logging: *default-logging


  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://api:8000
    ports: ["3000:3000"]
    depends_on:
      api:
        condition: service_healthy
    logging: *default-logging

volumes:
  minio-data:
  neo4j-data:
  api-data: