# =============================================================================
# NIEM Docker Environment Configuration
# =============================================================================
# Copy this file to .env and customize for your environment
#
# For worktree workflows, each worktree should have its own .env file
# with unique COMPOSE_PROJECT_NAME and port assignments.
#
# TIP: Use the dev.sh (macOS/Linux) or dev.ps1 (Windows) scripts to
#      automatically assign unique ports based on directory name.
#
# ⚠️  SECURITY WARNING:
# The default passwords below are for DEVELOPMENT ONLY and are NOT secure.
# For production deployments:
#   1. Generate strong, unique passwords for all services
#   2. Never commit .env files with real credentials to version control
#   3. Use secrets management (e.g., Docker secrets, Vault, AWS Secrets Manager)
#   4. Implement proper authentication (OAuth2, JWT, etc.)
# =============================================================================

# -----------------------------------------------------------------------------
# Project Configuration
# -----------------------------------------------------------------------------
# Unique project name to avoid container name conflicts
# Each worktree should have a different name
# Examples: niem-main, niem-feature-auth, niem-bugfix-123
COMPOSE_PROJECT_NAME=niem-main

# -----------------------------------------------------------------------------
# Port Assignments (for multiple worktrees)
# -----------------------------------------------------------------------------
# Choose unique ports for each worktree to avoid conflicts
# Recommended port assignments:
#
# Worktree         API_PORT  UI_PORT
# ----------------------------------------
# main             8000      3000
# feature-auth     8001      3001
# feature-graph    8002      3002
# bugfix-xyz       8003      3003
# experimental     8004      3004
#
# Or use dev.sh/dev.ps1 for automatic port assignment

API_PORT=8000
UI_PORT=3000

# -----------------------------------------------------------------------------
# Infrastructure Configuration
# -----------------------------------------------------------------------------
# MinIO Configuration (S3-compatible storage)
# ⚠️  Change these in production! Default values are insecure.
MINIO_ROOT_USER=minio
MINIO_ROOT_PASSWORD=minio123

# Neo4j Configuration (Graph database)
# ⚠️  Change this in production! Default password is insecure.
NEO4J_PASSWORD=password

# Development Token (API authentication)
# ⚠️  This is a placeholder for development. In production:
#     - Use proper OAuth2/JWT authentication
#     - Generate cryptographically secure tokens
#     - Rotate tokens regularly
DEV_TOKEN=devtoken

# UI Token (Browser-accessible, prefixed with NEXT_PUBLIC_)
# ⚠️  This token is exposed to the browser. For production:
#     - Implement proper authentication flow
#     - Use short-lived tokens with refresh mechanism
NEXT_PUBLIC_DEV_TOKEN=devtoken

# -----------------------------------------------------------------------------
# Advanced Configuration (usually not needed)
# -----------------------------------------------------------------------------
# Uncomment and modify these if using shared infrastructure with custom settings

# MINIO_ENDPOINT=http://niem-infra-minio:9000
# NEO4J_URI=bolt://niem-infra-neo4j:7687

# API Configuration
# API_HOST=0.0.0.0

# Build metadata (optional, for production builds)
# VERSION=1.0.0
# GIT_COMMIT=$(git rev-parse --short HEAD)
# BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

# UI API URL (for browser access, use localhost with API_PORT)
# NEXT_PUBLIC_API_URL=http://localhost:8000
