name: API Tests

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'api/**'
      - '.github/workflows/api-tests.yml'
  push:
    branches: [ main ]
    paths:
      - 'api/**'

jobs:
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('api/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./api
      run: |
        pip install -r requirements.txt
        pip install ruff black mypy
        pip install -e .

    - name: Run ruff
      working-directory: ./api
      run: ruff check src/

    - name: Check formatting with black
      working-directory: ./api
      run: black --check src/

    - name: Type check with mypy
      working-directory: ./api
      run: mypy src/ || true  # Allow to fail for now

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      working-directory: ./api
      run: |
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio
        pip install -e .

    - name: Run unit tests
      working-directory: ./api
      run: |
        pytest tests/unit -v --cov=src --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./api/coverage.xml
        flags: unittests
        name: codecov-api
        fail_ci_if_error: false

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      working-directory: ./api
      run: |
        pip install -r requirements.txt
        pip install bandit pip-audit
        pip install -e .

    - name: Run bandit security scan
      working-directory: ./api
      run: bandit -r src/ -f json -o bandit-report.json || true

    - name: Run pip-audit
      working-directory: ./api
      run: pip-audit --require-hashes --disable-pip || true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: api/bandit-report.json
